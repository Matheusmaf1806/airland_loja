// üîπ Certifique-se de que o script CryptoJS est√° carregado corretamente
async function loadCryptoJS() {
    if (typeof CryptoJS === "undefined") {
        await import("https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js");
    }
}

// üîπ Fun√ß√£o para buscar os hot√©is com base no destino e nas datas
async function fetchHotelData(destination) {
    try {
        const response = await fetch("/proxy-hotelbeds", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ destination }),
        });

        const result = await response.json();

        console.log("üì¢ Dados recebidos da API:", result); // Log para depura√ß√£o

        // üîπ Verifica se os hot√©is est√£o dentro do objeto "hotels.hotels"
        const hotelsArray = result.hotels?.hotels; // Usa `?.` para evitar erro se for `undefined`

        if (!hotelsArray || hotelsArray.length === 0) {
            throw new Error("Nenhum hotel encontrado para este destino.");
        }

        displayHotels(hotelsArray);
    } catch (error) {
        console.error("‚ùå Erro ao buscar hot√©is:", error);
        document.getElementById("hotels-list").innerHTML = `<p style="color: red;">Erro: ${error.message}</p>`;
    }
}

// üîπ Fun√ß√£o para exibir os hot√©is no frontend
function displayHotels(hotels) {
    const hotelsList = document.getElementById("hotels-list");
    hotelsList.innerHTML = ""; // Limpa a lista antes de adicionar novos hot√©is

    hotels.forEach((hotel) => {
        const hotelItem = document.createElement("div");
        hotelItem.className = "hotel-item";
        hotelItem.innerHTML = `
            <h3>${hotel.name}</h3>
            <p><strong>Categoria:</strong> ${hotel.categoryName || "N√£o informado"}</p>
            <p><strong>Localiza√ß√£o:</strong> ${hotel.destinationName || "Localiza√ß√£o n√£o dispon√≠vel"}</p>
            <p><strong>Pre√ßo m√≠nimo:</strong> ${hotel.minRate ? `${hotel.minRate} ${hotel.currency}` : "N√£o dispon√≠vel"}</p>
            <button onclick="alert('Reservado: ${hotel.name}')">Reservar</button>
        `;
        hotelsList.appendChild(hotelItem);
    });
}

// üîπ Adiciona evento ao bot√£o de busca quando a p√°gina estiver carregada
document.addEventListener("DOMContentLoaded", function () {
    document.getElementById("search-btn").addEventListener("click", function () {
        const destination = document.getElementById("destination").value.trim().toUpperCase() || "MCO"; // Converte para mai√∫sculas
        fetchHotelData(destination);
    });
});
